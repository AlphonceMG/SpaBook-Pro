<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Add Bootstrap CSS and Scrollspy JavaScript -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>

<style>
    body {
        background: linear-gradient(rgba(0, 0, 0, 0.5), #009688);
        color: white; /* Optional: Set text color to contrast with the background */
    }
</style>


</head>
<body data-spy="scroll" data-target="#navbar-example2">
    <!-- Navbar -->
    <nav id="navbar-example2" class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="#">Services</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <!-- Render service categories from data -->
                <% for (const category of categories) { %>
                <li class="nav-item">
                    <a class="nav-link" href="#<%= category %>"><%= category %></a>
                </li>
                <% } %>
            </ul>
        </div>
    </nav>

    <!-- Search Component -->
    <div class="container mb-3">
        <input type="text" id="service-search" class="form-control" placeholder="Search services...">
    </div>

    <!-- Service Badge -->
    <div class="container">
        <span class="badge rounded-pill bg-success" id="service-badge">Selected Services: <span id="selected-services-count">0</span></span>
    </div>

    <!-- Service List -->
    <div class="container mt-4">
        <h2>Services</h2>
        <!-- Render service categories and list items -->
        <% for (const category in services) { %>
        <section class="service-section" id="<%= category %>">
            <h3><%= category %></h3>
            <ul class="list-group">
                <% services[category].forEach((item) => { %>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="d-flex flex-column">
                        <div class="fw-bold"><%= item.name %></div>
                        <span class="custom-price">Price: Ksh <%= item.price %></span>
                    </div>
                    <button class="btn btn-primary toggle-service" data-service="<%= item.name %>">+</button>
                </li>
                <% }); %>
            </ul>
        </section>
        <% } %>
    </div>

    <!-- Updated Bookings-Services Code -->
    <section class="service-section text-center">
        <p>Total Deposit Amount: <span id="total-deposit">Ksh 0</span></p>
        <h5>Selected Services</h5>
        <ul class="list-group" id="selected-services-list">
             <!-- Selected services will be added here dynamically -->
        </ul>
    </section>

    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            <li class="page-item disabled">
                <a class="page-link">Previous</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="/bookings/appointments">Next</a>
            </li>
        </ul>
    </nav>

    <!-- Updated client-side code with toggle functionality -->
<script>
    // Initialize selectedServices object
    const selectedServices = {};
    const servicesData = <%- JSON.stringify(services) %>;
    const totalDepositElement = document.getElementById('total-deposit');

    // Function to check if a service is already selected
    function isServiceSelected(serviceName) {
        return selectedServices[serviceName];
    }

    $('.toggle-service').each(function() {
        const serviceName = $(this).data('service');
        const button = $(this);

        // Check if the service is already selected
        if (isServiceSelected(serviceName)) {
            button.text('-');
        } else {
            button.text('+');
        }

        button.click(function() {
            const selected = isServiceSelected(serviceName);
            $.post('/bookings/services/' + (selected ? 'deselect' : 'select'), { serviceName }, function(response) {
                if (response.success) {
                    if (response.selected) {
                        button.text('-');
                        selectedServices[serviceName] = true;
                    } else {
                        button.text('+');
                        delete selectedServices[serviceName]; // Remove the service from the selectedServices
                    }
                    updateBadge();
                    updateSelectedServicesList();
                    totalDepositElement.textContent = `Total Deposit Amount: Ksh ${response.totalDeposit}`;
                }
            });
        });
    });

    // Function to update the badge count
    function updateBadge() {
        const badge = document.getElementById('selected-services-count');
        const selectedCount = Object.keys(selectedServices).length;
        badge.textContent = selectedCount;
    }

    // Function to update selected services list
    function updateSelectedServicesList() {
        const selectedServicesList = document.getElementById('selected-services-list');
        selectedServicesList.innerHTML = '';
        let totalDeposit = 0;

        for (const serviceName in selectedServices) {
            const category = getCategoryForService(serviceName);
            const categoryServices = servicesData[category];
            const service = categoryServices.find(item => item.name === serviceName);
            if (service) {
                const deposit = 0.6 * service.price;
                totalDeposit += deposit;

                // Create a list item for the selected service
                const listItem = document.createElement('li');
                listItem.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'align-items-center');
                listItem.innerHTML = `
                    <div class="fw-bold">${serviceName} - Deposit: Ksh ${deposit}</div>
                `;

                selectedServicesList.appendChild(listItem);
            }
        }

        // Update the total deposit amount
        totalDepositElement.textContent = `Total Deposit Amount: Ksh ${totalDeposit}`;
    }
    function getCategoryForService(serviceName) {
        for (const category in servicesData) {
            if (servicesData[category].some(item => item.name === serviceName)) {
                return category;
            }
        }
    }
    // Call the initial badge and list update
    updateBadge();
    updateSelectedServicesList();
</script>
</body>
</html>


